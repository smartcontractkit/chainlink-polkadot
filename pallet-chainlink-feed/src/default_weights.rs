
//! Autogenerated weights for `pallet_chainlink_feed`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-22, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Mercurys-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// -p
// pallet_chainlink_feed
// --extrinsic
// *
// -s
// 20
// -r
// 10
// --execution
// wasm
// --wasm-execution
// compiled
// --output
// pallet-chainlink-feed/src/default_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::weights::{constants::RocksDbWeight as DbWeight, Weight};
use sp_std::marker::PhantomData;

impl crate::WeightInfo for () {
	/// Storage: ChainlinkFeed FeedCreators (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed FeedCreators (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed FeedCounter (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed FeedCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Oracles (r:25 w:25)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed OracleStatuses (r:25 w:25)
	/// Proof Skipped: ChainlinkFeed OracleStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Feeds (r:0 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Rounds (r:0 w:1)
	/// Proof Skipped: ChainlinkFeed Rounds (max_values: None, max_size: None, mode: Measured)
	/// The range of component `o` is `[1, 25]`.
	fn create_feed(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `232`
		//  Estimated: `8322 + o * (4950 ±0)`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(23_218_218, 0)
			.saturating_add(Weight::from_parts(0, 8322))
			// Standard Error: 20_645
			.saturating_add(Weight::from_parts(9_675_175, 0).saturating_mul(o.into()))
			.saturating_add(DbWeight::get().reads(2))
			.saturating_add(DbWeight::get().reads((2_u64).saturating_mul(o.into())))
			.saturating_add(DbWeight::get().writes(3))
			.saturating_add(DbWeight::get().writes((2_u64).saturating_mul(o.into())))
			.saturating_add(Weight::from_parts(0, 4950).saturating_mul(o.into()))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	fn transfer_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `3845`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3845))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	fn cancel_ownership_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `412`
		//  Estimated: `3877`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3877))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	fn accept_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `412`
		//  Estimated: `3877`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3877))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Details (r:0 w:23)
	/// Proof Skipped: ChainlinkFeed Details (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Rounds (r:0 w:23)
	/// Proof Skipped: ChainlinkFeed Rounds (max_values: None, max_size: None, mode: Measured)
	/// The range of component `o` is `[1, 25]`.
	fn set_pruning_window(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `384`
		//  Estimated: `4617`
		// Minimum execution time: 8_000_000 picoseconds.
		Weight::from_parts(3_975_102, 0)
			.saturating_add(Weight::from_parts(0, 4617))
			// Standard Error: 9_964
			.saturating_add(Weight::from_parts(2_723_763, 0).saturating_mul(o.into()))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
			.saturating_add(DbWeight::get().writes((2_u64).saturating_mul(o.into())))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed OracleStatuses (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed OracleStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Rounds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Rounds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Details (r:1 w:2)
	/// Proof Skipped: ChainlinkFeed Details (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: ChainlinkFeed Oracles (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	fn submit_opening_round_answers() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `803`
		//  Estimated: `24933`
		// Minimum execution time: 64_000_000 picoseconds.
		Weight::from_parts(65_000_000, 0)
			.saturating_add(Weight::from_parts(0, 24933))
			.saturating_add(DbWeight::get().reads(6))
			.saturating_add(DbWeight::get().writes(6))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed OracleStatuses (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed OracleStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Rounds (r:2 w:1)
	/// Proof Skipped: ChainlinkFeed Rounds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Details (r:1 w:2)
	/// Proof Skipped: ChainlinkFeed Details (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: ChainlinkFeed Oracles (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	/// The range of component `o` is `[2, 25]`.
	fn submit_closing_answer(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `839 + o * (51 ±0)`
		//  Estimated: `27583 + o * (250 ±0)`
		// Minimum execution time: 51_000_000 picoseconds.
		Weight::from_parts(51_890_769, 0)
			.saturating_add(Weight::from_parts(0, 27583))
			// Standard Error: 25_004
			.saturating_add(Weight::from_parts(318_076, 0).saturating_mul(o.into()))
			.saturating_add(DbWeight::get().reads(7))
			.saturating_add(DbWeight::get().writes(6))
			.saturating_add(Weight::from_parts(0, 250).saturating_mul(o.into()))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed OracleStatuses (r:50 w:50)
	/// Proof Skipped: ChainlinkFeed OracleStatuses (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Oracles (r:25 w:25)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	/// The range of component `d` is `[1, 25]`.
	/// The range of component `n` is `[1, 25]`.
	fn change_oracles(d: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + d * (99 ±0) + n * (27 ±0)`
		//  Estimated: `4932 + d * (2778 ±0) + n * (5034 ±0)`
		// Minimum execution time: 252_000_000 picoseconds.
		Weight::from_parts(8_368_181, 0)
			.saturating_add(Weight::from_parts(0, 4932))
			// Standard Error: 57_533
			.saturating_add(Weight::from_parts(9_371_236, 0).saturating_mul(d.into()))
			// Standard Error: 57_533
			.saturating_add(Weight::from_parts(10_661_387, 0).saturating_mul(n.into()))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().reads((1_u64).saturating_mul(d.into())))
			.saturating_add(DbWeight::get().reads((2_u64).saturating_mul(n.into())))
			.saturating_add(DbWeight::get().writes(1))
			.saturating_add(DbWeight::get().writes((1_u64).saturating_mul(d.into())))
			.saturating_add(DbWeight::get().writes((2_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2778).saturating_mul(d.into()))
			.saturating_add(Weight::from_parts(0, 5034).saturating_mul(n.into()))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	fn update_future_rounds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `3845`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3845))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Requesters (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Requesters (max_values: None, max_size: None, mode: Measured)
	fn set_requester() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `380`
		//  Estimated: `7690`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(14_000_000, 0)
			.saturating_add(Weight::from_parts(0, 7690))
			.saturating_add(DbWeight::get().reads(2))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Feeds (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Requesters (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Requesters (max_values: None, max_size: None, mode: Measured)
	fn remove_requester() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `467`
		//  Estimated: `7864`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(15_000_000, 0)
			.saturating_add(Weight::from_parts(0, 7864))
			.saturating_add(DbWeight::get().reads(2))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Requesters (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Requesters (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Rounds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Rounds (max_values: None, max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Details (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Details (max_values: None, max_size: None, mode: Measured)
	fn request_new_round() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `644`
		//  Estimated: `16436`
		// Minimum execution time: 33_000_000 picoseconds.
		Weight::from_parts(34_000_000, 0)
			.saturating_add(Weight::from_parts(0, 16436))
			.saturating_add(DbWeight::get().reads(4))
			.saturating_add(DbWeight::get().writes(4))
	}
	/// Storage: ChainlinkFeed Oracles (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_payment() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `449`
		//  Estimated: `10110`
		// Minimum execution time: 69_000_000 picoseconds.
		Weight::from_parts(70_000_000, 0)
			.saturating_add(Weight::from_parts(0, 10110))
			.saturating_add(DbWeight::get().reads(3))
			.saturating_add(DbWeight::get().writes(3))
	}
	/// Storage: ChainlinkFeed Oracles (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	fn transfer_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `176`
		//  Estimated: `3641`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3641))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Oracles (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	fn cancel_admin_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `209`
		//  Estimated: `3674`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3674))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed Oracles (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Oracles (max_values: None, max_size: None, mode: Measured)
	fn accept_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `209`
		//  Estimated: `3674`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3674))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed PalletAdmin (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `200`
		//  Estimated: `7881`
		// Minimum execution time: 51_000_000 picoseconds.
		Weight::from_parts(51_000_000, 0)
			.saturating_add(Weight::from_parts(0, 7881))
			.saturating_add(DbWeight::get().reads(3))
			.saturating_add(DbWeight::get().writes(2))
	}
	/// Storage: ChainlinkFeed PalletAdmin (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed Feeds (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed Feeds (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn reduce_debt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `505`
		//  Estimated: `9553`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(27_000_000, 0)
			.saturating_add(Weight::from_parts(0, 9553))
			.saturating_add(DbWeight::get().reads(3))
			.saturating_add(DbWeight::get().writes(2))
	}
	/// Storage: ChainlinkFeed PalletAdmin (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed PendingPalletAdmin (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed PendingPalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	fn transfer_pallet_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `97`
		//  Estimated: `3164`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(11_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3164))
			.saturating_add(DbWeight::get().reads(2))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed PalletAdmin (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed PendingPalletAdmin (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed PendingPalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	fn cancel_pallet_admin_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `149`
		//  Estimated: `3268`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(11_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3268))
			.saturating_add(DbWeight::get().reads(2))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed PendingPalletAdmin (r:1 w:1)
	/// Proof Skipped: ChainlinkFeed PendingPalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed PalletAdmin (r:0 w:1)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	fn accept_pallet_admin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `107`
		//  Estimated: `1699`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(10_000_000, 0)
			.saturating_add(Weight::from_parts(0, 1699))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(2))
	}
	/// Storage: ChainlinkFeed PalletAdmin (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed FeedCreators (r:0 w:1)
	/// Proof Skipped: ChainlinkFeed FeedCreators (max_values: None, max_size: None, mode: Measured)
	fn set_feed_creator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `97`
		//  Estimated: `1679`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(10_000_000, 0)
			.saturating_add(Weight::from_parts(0, 1679))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
	/// Storage: ChainlinkFeed PalletAdmin (r:1 w:0)
	/// Proof Skipped: ChainlinkFeed PalletAdmin (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ChainlinkFeed FeedCreators (r:0 w:1)
	/// Proof Skipped: ChainlinkFeed FeedCreators (max_values: None, max_size: None, mode: Measured)
	fn remove_feed_creator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `97`
		//  Estimated: `1679`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(11_000_000, 0)
			.saturating_add(Weight::from_parts(0, 1679))
			.saturating_add(DbWeight::get().reads(1))
			.saturating_add(DbWeight::get().writes(1))
	}
}
